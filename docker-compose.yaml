version: '3.4'
# trigger 37
x-common-build-args: &common-build-args
  GITHUB_SSH_PRIVATE_KEY_BASE64: ${GITHUB_SSH_PRIVATE_KEY_BASE64-}

x-common-environment: &common-environment
  #GRPC_TRACE: tcp,http,api
  #GRPC_VERBOSITY: debug
  AES_SECRET_KEY: ${AES_SECRET_KEY-}
  AUDITEVENT_SERVICE_TYPE: ${AUDITEVENT_SERVICE_TYPE-}
  AUDITEVENT_SERVICE_URL: ${AUDITEVENT_SERVICE_URL-}
  ALERTMANAGER_SLACK_API_URL: ${ALERTMANAGER_SLACK_API_URL-}
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID-}
  AWS_REGION: ${AWS_REGION-}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY-}
  AWS_SHIPYARD_OPERATOR_SSH_KEY_CONTENTS_B64: ${AWS_SHIPYARD_OPERATOR_SSH_KEY_CONTENTS_B64-}
  AWS_SHIPYARD_OPERATOR_SSH_KEY_PATH: ${AWS_SHIPYARD_OPERATOR_SSH_KEY_PATH-}
  AZURE_K3S_IMAGE_ID: ${AZURE_K3S_IMAGE_ID-}
  AZURE_K3S_VM_SIZE: ${AZURE_K3S_VM_SIZE-}
  AZURE_SHIPYARD_OPERATOR_PUBLIC_SSH_KEY_CONTENTS_B64: ${AZURE_SHIPYARD_OPERATOR_PUBLIC_SSH_KEY_CONTENTS_B64-}
  AZURE_SHIPYARD_OPERATOR_PUBLIC_SSH_KEY_PATH: ${AZURE_SHIPYARD_OPERATOR_PUBLIC_SSH_KEY_PATH-}
  AZURE_SHIPYARD_OPERATOR_SSH_KEY_CONTENTS_B64: ${AZURE_SHIPYARD_OPERATOR_SSH_KEY_CONTENTS_B64-}
  AZURE_SHIPYARD_OPERATOR_SSH_KEY_PATH: ${AZURE_SHIPYARD_OPERATOR_SSH_KEY_PATH-}
  BUILD_WAITING_DOMAIN: ${BUILD_WAITING_DOMAIN-}
  BUILDLOGGER_URL: ${BUILDLOGGER_URL-}
  CELERY_CONCURRENCY: 1
  CELERY_QUEUES: ${CELERY_QUEUES-celery}
  CLUSTER_MANAGER_SERVICE_ACCOUNT_JSON: ${CLUSTER_MANAGER_SERVICE_ACCOUNT_JSON-}
  DAEMON_IMAGE_PULL_POLICY: ${DAEMON_IMAGE_PULL_POLICY-}
  DAEMON_IMAGE_VERSION: ${DAEMON_IMAGE_VERSION-}
  DAEMON_SENTRY_DSN: ${DAEMON_SENTRY_DSN-}
  DATABASE_URL: ${DATABASE_URL-}
  DEBUG_DEPLOY_SERVICE_ACCOUNT: ${DEBUG_DEPLOY_SERVICE_ACCOUNT-}
  DEBUG_GITHUB_ID: ${DEBUG_GITHUB_ID-}
  DEBUG_GITHUB_LOGIN: ${DEBUG_GITHUB_LOGIN-}
  DEBUG_GITHUB_NAME: ${DEBUG_GITHUB_NAME-}
  DEBUG_GITHUB_TOKEN: ${DEBUG_GITHUB_TOKEN-}
  DEBUG_TOOLKIT_APPLICATION_PROJECTS: ${DEBUG_TOOLKIT_APPLICATION_PROJECTS-}
  DEBUG_TOOLKIT_PROJECT: ${DEBUG_TOOLKIT_PROJECT-}
  DEV: ${DEV-}
  ENABLE_HOT_RELOAD: ${ENABLE_HOT_RELOAD-}
  DEX_CA_CERT: ${DEX_CA_CERT-}
  DEX_CLIENT_CERT: ${DEX_CLIENT_CERT-}
  DEX_CLIENT_KEY: ${DEX_CLIENT_KEY-}
  DEX_DOMAIN: ${DEX_DOMAIN-}
  DEX_ROWBOAT_CLIENT_SECRET: ${DEX_ROWBOAT_CLIENT_SECRET-}
  DOCKER_PASSWORD: ${DOCKER_PASSWORD-}
  DOCKER_USERNAME: ${DOCKER_USERNAME-}
  EMAIL_CONTACT_SALES: ${EMAIL_CONTACT_SALES-}
  FLASK_DEBUG: '1'
  GCP_PROJECT: ${GCP_PROJECT-}
  GITLAB_PROVIDER_WEBHOOK_URL: ${GITLAB_PROVIDER_WEBHOOK_URL-}
  GITHUB_APP_APP_ID: ${GITHUB_APP_APP_ID-}
  GITHUB_APP_CLIENT_ID: ${GITHUB_APP_CLIENT_ID-}
  GITHUB_APP_CLIENT_KEY: ${GITHUB_APP_CLIENT_KEY-}
  GITHUB_APP_INSTALL_URL: ${GITHUB_APP_INSTALL_URL-}
  GITHUB_APP_PRIVATE_KEY: ${GITHUB_APP_PRIVATE_KEY-}
  GITHUB_APP_USER_LOGIN: ${GITHUB_APP_USER_LOGIN-}
  GITHUB_SHIPYARD_INTEGRATIONS_ACCESS_TOKEN: ${GITHUB_SHIPYARD_INTEGRATIONS_ACCESS_TOKEN-}
  GITHUB_SHIPYARD_INTEGRATIONS_USERNAME: ${GITHUB_SHIPYARD_INTEGRATIONS_USERNAME-}
  GITLAB_APP_APP_ID: ${GITLAB_APP_APP_ID-}
  GITLAB_APP_SECRET: ${GITLAB_APP_SECRET-}
  GRETEL_API_AUTH_TOKEN: ${GRETEL_API_AUTH_TOKEN-}
  GRETEL_API_URL: ${GRETEL_API_URL-}
  K3S_AMI_ID: ${K3S_AMI_ID-}
  K3S_CACHE_BUCKET: ${K3S_CACHE_BUCKET-}
  LAUNCH_DARKLY_SDK_KEY: ${LAUNCH_DARKLY_SDK_KEY-}
  MAGE_IMAGE_VERSION: ${MAGE_IMAGE_VERSION-}
  MAILJET_APIKEY_PRIVATE: ${MAILJET_APIKEY_PRIVATE-}
  MAILJET_APIKEY_PUBLIC: ${MAILJET_APIKEY_PUBLIC-}
  NAUTILUS_GRPC_CALLBACK: ${NAUTILUS_GRPC_CALLBACK-}
  OAUTHLIB_INSECURE_TRANSPORT: ${OAUTHLIB_INSECURE_TRANSPORT-}
  PRISM_GCP_SERVICE_ACCOUNT_BASE64: ${PRISM_GCP_SERVICE_ACCOUNT_BASE64-}
  PROVISIONATOR_SERVICE_URL: ${PROVISIONATOR_SERVICE_URL-}
  REACT_DEV: ${REACT_DEV-}
  REDIS_HOST: ${REDIS_HOST-}
  REGISTRY_IMAGE_VERSION: ${REGISTRY_IMAGE_VERSION-}
  RESTIC_PASSWORD: ${RESTIC_PASSWORD-}
  ROWBOAT_NAMESPACE: ${ROWBOAT_NAMESPACE-}
  SECRET_KEY: ${SECRET_KEY-}
  SECURITY_PASSWORD_SALT: ${SECURITY_PASSWORD_SALT-}
  SENTRY_DSN: ${SENTRY_DSN-}
  NAUTILUS_SENTRY_DSN: ${NAUTILUS_SENTRY_DSN-}
  SENTRY_TRACE_SAMPLE_RATE: ${SENTRY_TRACE_SAMPLE_RATE-}
  SHIPYARD_AZURE_REGION: ${SHIPYARD_AZURE_REGION-}
  SHIPYARD_AZURE_SERVICE_PRINCIPAL_ID: ${SHIPYARD_AZURE_SERVICE_PRINCIPAL_ID-}
  SHIPYARD_AZURE_SERVICE_PRINCIPAL_SECRET: ${SHIPYARD_AZURE_SERVICE_PRINCIPAL_SECRET-}
  SHIPYARD_AZURE_SUBSCRIPTION_ID: ${SHIPYARD_AZURE_SUBSCRIPTION_ID-}
  SHIPYARD_AZURE_TENANT_ID: ${SHIPYARD_AZURE_TENANT_ID-}
  SHIPYARD_CDN: ${SHIPYARD_CDN-}
  SHIPYARD_CLUSTER_CLOUD: ${SHIPYARD_CLUSTER_CLOUD-}
  SHIPYARD_CLUSTER_KUBECONFIG: ${SHIPYARD_CLUSTER_KUBECONFIG-}
  SHIPYARD_CLUSTER_NAME: ${SHIPYARD_CLUSTER_NAME-}
  SHIPYARD_CLUSTER_REGION: ${SHIPYARD_CLUSTER_REGION-}
  SHIPYARD_CLUSTER_ZONE: ${SHIPYARD_CLUSTER_ZONE-}
  SHIPYARD_DATA_ENCRYPTION_KEY: ${SHIPYARD_DATA_ENCRYPTION_KEY-}
  SHIPYARD_DOMAIN: ${SHIPYARD_DOMAIN-}
  SHIPYARD_DOMAIN_SUFFIX: ${SHIPYARD_DOMAIN_SUFFIX-}
  SHIPYARD_INSTANCE_TAG: ${SHIPYARD_INSTANCE_TAG-}
  SHIPYARD_INVITE_SIGNING_KEY: ${SHIPYARD_INVITE_SIGNING_KEY-}
  SHIPYARD_KEY_ENCRYPTION_KEY: ${SHIPYARD_KEY_ENCRYPTION_KEY-}
  SHIPYARD_RUN_MODE: ${SHIPYARD_RUN_MODE-}
  SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN-}
  SLACK_CLIENT_ID: ${SLACK_CLIENT_ID-}
  SLACK_CLIENT_SECRET: ${SLACK_CLIENT_SECRET-}
  SLACK_SIGNING_KEY: ${SLACK_SIGNING_KEY-}
  SNYK_TOKEN: ${SNYK_TOKEN-}
  SQLALCHEMY_ECHO: ${SQLALCHEMY_ECHO-}
  TERRAFORM_GCP_BASE64_SERVICE_ACCOUNT: ${TERRAFORM_GCP_BASE64_SERVICE_ACCOUNT-}
  TUGBOAT_IMAGE_REPO: ${TUGBOAT_IMAGE_REPO-}
  TUGBOAT_IMAGE_VERSION: ${TUGBOAT_IMAGE_VERSION-}
  USE_LEGACY_PROVISIONING: ${USE_LEGACY_PROVISIONING-}
  LOCAL_CA_ROOT_CERT: ${LOCAL_CA_ROOT_CERT-}
  LOCAL_CA_CRT: ${LOCAL_CA_CRT-}
  LOCAL_CA_KEY: ${LOCAL_CA_KEY-}

x-worker-service: &worker-service
  build:
    context: '.'
    args:
      GITHUB_APP_INSTALL_URL: ${GITHUB_APP_INSTALL_URL-}
      SHIPYARD_INSTANCE_TAG: ${SHIPYARD_INSTANCE_TAG-}
      REACT_DEV: ${REACT_DEV-}
      DEV: ${DEV-}
      KUBECTL_VERSION: ${KUBECTL_VERSION-}
      <<: *common-build-args
  volumes:
    - './shipyard:/srv/shipyard:ro'
    - './tests:/srv/tests:ro'
    - './manage.py:/srv/manage.py:ro'
    - './filesystem/srv/bootstrap:/srv/bootstrap'
    - './filesystem/srv/tf-dir:/srv/tf-dir'
    - './filesystem/srv/charts:/srv/charts:ro'
    - './filesystem/srv/entrypoints:/srv/entrypoints:ro'
    - './migrations:/srv/migrations'
    - '/var/run/docker.sock:/var/run/docker.sock:ro'
    - '/private/tmp:/private/tmp'
    - './localcluster.yaml:/srv/localcluster.yaml'
  depends_on:
    - redis
  command: 'tini -- /srv/entrypoints/start-celery.sh'
  networks:
    - shipyard

services:

  web2:
    labels:
      shipyard.route: '/web2'
      shipyard.liveness.http.path: '/health'
      shipyard.liveness.initial_delay: '15'
      shipyard.liveness.period: '15'
      shipyard.readiness.http.path: '/health'
      shipyard.readiness.initial_delay: '10'
      shipyard.liveness.timeout_seconds: 15
      shipyard.readiness.period: '15'
      shipyard.route.oauth.redirect-uri: '/callback/github/oauth'
    build:
      context: '.'
      args:
        SHIPYARD_BUILD_FRONTEND: 'true'
        GITHUB_APP_INSTALL_URL: ${GITHUB_APP_INSTALL_URL}
        SHIPYARD_INSTANCE_TAG: ${SHIPYARD_INSTANCE_TAG}
        REACT_DEV: ${REACT_DEV-}
        <<: *common-build-args
    environment:
      <<: *common-environment
      ENABLE_PYROSCOPE: ${ENABLE_PYROSCOPE-}
    volumes:
      - './shipyard:/srv/shipyard:ro'
      - './manage.py:/srv/manage.py:ro'
      - './filesystem/srv/bootstrap:/srv/bootstrap'
      - './filesystem/srv/charts:/srv/charts:ro'
      - './filesystem/srv/entrypoints:/srv/entrypoints:ro'
      - './filesystem/srv/tf-dir:/srv/tf-dir'
      - './hook-examples:/srv/hook-examples:ro'
      - './migrations:/srv/migrations'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/private/tmp:/private/tmp'
      - './pyproject.toml:/srv/pyproject.toml'
      - './poetry.lock:/srv/poetry.lock'
      - './localcluster.yaml:/srv/localcluster.yaml'
    depends_on:
      - redis
      - postgres
      - heartbeat
    command: 'tini -- /srv/entrypoints/start-gunicorn.sh'
    ports:
      - '8080'
    networks:
      shipyard:
        ipv4_address: 172.99.0.42
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "org-cluster.today:host-gateway"
    stop_grace_period: 2s

  build-status2:
    build:
      context: '.'
      args:
        SHIPYARD_BUILD_FRONTEND: 'false'
        SHIPYARD_INSTANCE_TAG: ${SHIPYARD_INSTANCE_TAG}
        REACT_DEV: ${REACT_DEV-}
        <<: *common-build-args
    environment:
      <<: *common-environment
    volumes:
      - './shipyard:/srv/shipyard:ro'
      - './filesystem/srv/entrypoints:/srv/entrypoints:ro'
    depends_on:
      - redis
      - postgres
      - heartbeat
    command: 'tini -- poetry run python /srv/entrypoints/buildstatus_entry_grpc.py'
    ports:
      - '8083:8081'
    networks:
      shipyard:
        ipv4_address: 172.99.0.43
    extra_hosts:
      - "host.docker.internal:host-gateway"
    attach: false
    stop_grace_period: 2s

  cluster-status2:
    build:
      context: '.'
      args:
        SHIPYARD_BUILD_FRONTEND: 'false'
        SHIPYARD_INSTANCE_TAG: ${SHIPYARD_INSTANCE_TAG}
        REACT_DEV: ${REACT_DEV-}
        <<: *common-build-args
    environment:
      <<: *common-environment
    volumes:
      - './shipyard:/srv/shipyard:ro'
      - './filesystem/srv/entrypoints:/srv/entrypoints:ro'
    depends_on:
      - redis
      - postgres
      - heartbeat
    command: 'tini -- poetry run python /srv/entrypoints/clusterstatus_entry_grpc.py'
    networks:
      - shipyard
    ports:
      - '8084:8081'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    stop_grace_period: 2s

  flower2:
    build:
      context: '.'
      args:
        GITHUB_APP_INSTALL_URL: ${GITHUB_APP_INSTALL_URL}
        SHIPYARD_INSTANCE_TAG: ${SHIPYARD_INSTANCE_TAG}
        REACT_DEV: ${REACT_DEV-}
        DEV: ${DEV-}
        <<: *common-build-args
    environment:
      <<: *common-environment
    volumes:
      - './shipyard:/srv/shipyard:ro'
      - './filesystem/srv/entrypoints:/srv/entrypoints:ro'
    depends_on:
      - redis
      - web
    command: 'tini -- /srv/entrypoints/start-flower.sh'
    networks:
      - shipyard
    ports:
      - '8999:8081'
    stop_grace_period: 2s
    
volumes:
  shipyard-nfs:
  shipyard-postgres:
  vardata:
  etcdata:
  nfsdata:
  k3s-server: {}
  k3s-agent: {}

networks:
  shipyard:
    ipam:
      driver: default
      config:
        - subnet: "172.99.0.0/16"
